<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.github.stephanenicolas.afterburner</groupId>
	<artifactId>afterburner-parent</artifactId>
	<version>1.0.0</version>
	<name>afterburner Parent</name>
	<packaging>pom</packaging>
	<description>afterburnering is, indeed, kind of way to bypass java single inheritance paradigm. It allows to copy all declared fields, constructors and methods in a given class into another class.</description>
	<inceptionYear>2014</inceptionYear>

	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>

	<modules>
		<module>afterburner-library</module>
		<module>afterburner-sample-processor</module>
		<module>afterburner-sample</module>
	</modules>

	<scm>
		<connection>scm:git:ssh://git@github.com/stephanenicolas/afterburner.git</connection>
		<url>git:ssh://git@github.com/stephanenicolas/afterburner.git</url>
		<developerConnection>scm:git:ssh://git@github.com/stephanenicolas/afterburner.git</developerConnection>
		<tag>afterburner-parent-1.0.0</tag>
	</scm>

	<licenses>
		<license>
			<name>Apache 2</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<issueManagement>
		<system>Github Issue Tracker</system>
		<url>https://github.com/stephanenicolas/afterburner/issues</url>
	</issueManagement>

	<developers>
		<developer>
			<id>SNI</id>
			<name>St√©phane Nicolas</name>
			<email>steff.nicolas@gmail.com</email>
		</developer>
	</developers>

	<properties>
		<java.version>1.6</java.version>
		<maven-compiler-plugin.version>2.5.1</maven-compiler-plugin.version>
		<eclipse-lifecycle-plugin.version>1.0.0</eclipse-lifecycle-plugin.version>
		<maven-checkstyle-plugin.version>2.11</maven-checkstyle-plugin.version>
		<findbugs-maven-plugin.version>2.5.3</findbugs-maven-plugin.version>
		<maven-jar-plugin.version>2.4</maven-jar-plugin.version>
		<maven-source-plugin.version>2.2</maven-source-plugin.version>
		<maven-release-plugin.version>2.5</maven-release-plugin.version>
		<javassist-maven-plugin.version>1.1.0</javassist-maven-plugin.version>
	</properties>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven-checkstyle-plugin.version}</version>
					<configuration>
						<configLocation>afterburner_checks.xml</configLocation>
						<enableRulesSummary>false</enableRulesSummary>
					</configuration>
					<executions>
						<execution>
							<id>checkstyle-check</id>
							<phase>process-sources</phase>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>${findbugs-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>findbugs-check</id>
							<phase>verify</phase>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>verify</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Eclipse config -->
				<!-- http://stackoverflow.com/questions/13040788/how-to-elimate-the-maven-enforcer-plugin-goal-enforce-is-ignored-by-m2e-wa -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-checkstyle-plugin
										</artifactId>
										<versionRange>
											[${maven-checkstyle-plugin.version},)
										</versionRange>
										<goals>
											<goal>check</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											de.icongmbh.oss.maven.plugins
										</groupId>
										<artifactId>
											javassist-maven-plugin
										</artifactId>
										<versionRange>
											[${javassist-maven-plugin.vesion},)
										</versionRange>
										<goals>
											<goal>javassist</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>jacoco-maven-plugin</artifactId>
										<versionRange>[0.7.1.201405082137,)</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${maven-release-plugin.version}</version>
				<configuration>
					<goals>deploy</goals>
					<autoversionsubmodules>true</autoversionsubmodules>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>third.party.closed.source.repo</id>
			<url>file://${basedir}/../maven_repo_3rd_party</url>
		</repository>
	</repositories>

	<profiles>
		<profile>
			<id>fast</id>
			<properties>
				<skipTests>true</skipTests>
				<checkstyle.skip>true</checkstyle.skip>
				<findbugs.skip>true</findbugs.skip>
			</properties>
		</profile>
	</profiles>
</project>
